// This autogenerated skeleton file illustrates how to build a server.
// You should copy it to another filename to avoid overwriting it.

#include "SeTest.h"
#include <thrift/transport/TSocket.h>
#include <thrift/transport/TBufferTransports.h>
#include <thrift/protocol/TBinaryProtocol.h>

using namespace ::apache::thrift;
using namespace ::apache::thrift::protocol;
using namespace ::apache::thrift::transport;

using boost::shared_ptr;

using namespace  ::xlight;

int main(int argc, char **argv)
{
    shared_ptr<TSocket> socket(new TSocket("localhost", 9090));
    shared_ptr<TBufferedTransport> transport(new TBufferedTransport(socket));
    shared_ptr<TBinaryProtocol> protocol(new TBinaryProtocol(transport));
    SeTestClient client(protocol);

    try {
        transport->open();
        client.NopNop();
        printf("ping()\n");


        StUser test;
        try {
            client.SearchUser(test, "test");
            printf("Whoa? We can divide by zero!\n");
        } catch (TException& io) {
            printf("TException: %s\n", io.what());
        }

        transport->close();
    } catch (TException &tx) {
        printf("ERROR: %s\n", tx.what());
    }
    return 0;
}

